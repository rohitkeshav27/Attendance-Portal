/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package attendance;

import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author rewant
 */
public class ChangePassword extends javax.swing.JFrame {
    Connection conn;
    PreparedStatement psd;
    ResultSet rs;
    /**
     * Creates new form ChangePassword
     */
    public ChangePassword() {
        initComponents();
        conn=javaconnectDataBase.ConnectDB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        pass = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        passconfirm = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        oldpas = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CHANGE PASSWORD", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 0, 24))); // NOI18N

        jLabel2.setText("CONFIRM PASSWORD");

        jLabel3.setText("OLD PASSWORD");

        jLabel1.setText("NEW PASSWORD");

        jButton1.setText("CHANGE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("BACK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(oldpas)
                    .addComponent(pass)
                    .addComponent(passconfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(109, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(53, 53, 53))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(oldpas, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(passconfirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        if(Login.studentflag==1){
        StudentDetailsDisplay obj=new StudentDetailsDisplay();
        obj.setVisible(true);
        }else{
            TeacherDetailsDisplay obj=new TeacherDetailsDisplay();
            obj.setVisible(true);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String usn =Login.USN1;
        if(Login.studentflag==1){
        String sql="SELECT Password FROM student WHERE USN='"+usn+"'";
        try{
            psd=conn.prepareStatement(sql);
            rs=psd.executeQuery();
            String a=rs.getString(1);
          
            if(oldpas.getText().equals(a)){
                if(pass.getText().equals(passconfirm.getText())){
                    if("".equals(pass.getText())){
                        JOptionPane.showMessageDialog(null, "Password fields are empty");
                    }else{
                        sql="UPDATE student SET Password=? WHERE USN=? ";
                        try{
                            
                            psd=conn.prepareStatement(sql);
                            psd.setString(1, pass.getText());
                            psd.setString(2,usn);
                            psd.executeUpdate();
                            JOptionPane.showMessageDialog(null, "Password Changed");
                            setVisible(false);
                            StudentDetailsDisplay obj=new StudentDetailsDisplay();
                            obj.setVisible(true);
                           try {
            // TODO add your handling code here:
           conn.close();
           System.out.println("Connection Closed");
           } catch (SQLException ex) {
           Logger.getLogger(StudentDetailsDisplay.class.getName()).log(Level.SEVERE, null, ex);
           }
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Passwords don't match");
                }
            }else{
                JOptionPane.showMessageDialog(null, "Entered Password doesn't match with existing Database");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
        
        }else{
            String sql="SELECT Password FROM teacher WHERE Teacher_id='"+usn+"'";
        try{
            psd=conn.prepareStatement(sql);
            rs=psd.executeQuery();
            String a=rs.getString(1);
          
            if(oldpas.getText().equals(a)){
                if(pass.getText().equals(passconfirm.getText())){
                    if("".equals(pass.getText())){
                        JOptionPane.showMessageDialog(null, "Password fields are empty");
                    }else{
                        sql="UPDATE teacher SET Password=? WHERE Teacher_id=? ";
                        try{
                            
                            psd=conn.prepareStatement(sql);
                            psd.setString(1, pass.getText());
                            psd.setString(2,usn);
                            psd.executeUpdate();
                            JOptionPane.showMessageDialog(null, "Password Changed");
                            setVisible(false);
                            TeacherDetailsDisplay obj=new TeacherDetailsDisplay();
                            obj.setVisible(true);  
                           try {
            // TODO add your handling code here:
           conn.close();
           System.out.println("Connection Closed");
           } catch (SQLException ex) {
           Logger.getLogger(StudentDetailsDisplay.class.getName()).log(Level.SEVERE, null, ex);
           }  
                        }
                        
                        catch(Exception e){
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Passwords don't match");
                }
            }else{
                JOptionPane.showMessageDialog(null, "Entered Password doesn't match with existing Database");
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChangePassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField oldpas;
    private javax.swing.JPasswordField pass;
    private javax.swing.JPasswordField passconfirm;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package attendance;

import java.awt.HeadlessException;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author rewant
 */
public class TeacherAccountCreate extends javax.swing.JFrame {
    
    Connection conn;
    ResultSet rs;
    PreparedStatement psd;

    /**
     * Creates new form TeacherAccountCreate
     */
    public TeacherAccountCreate() {
        super("SIGN IN");
        initComponents();
        conn = javaconnectDataBase.ConnectDB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Panel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        subject1 = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        phone = new javax.swing.JTextField();
        pass = new javax.swing.JPasswordField();
        passcon = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        classname1 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        id = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        elective1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        classname2 = new javax.swing.JComboBox<>();
        subject2 = new javax.swing.JTextField();
        elective2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        classname3 = new javax.swing.JComboBox<>();
        subject3 = new javax.swing.JTextField();
        elective3 = new javax.swing.JComboBox<>();
        classname4 = new javax.swing.JComboBox<>();
        subject4 = new javax.swing.JTextField();
        elective4 = new javax.swing.JComboBox<>();
        classname5 = new javax.swing.JComboBox<>();
        elective5 = new javax.swing.JComboBox<>();
        subject5 = new javax.swing.JTextField();
        classname6 = new javax.swing.JComboBox<>();
        elective6 = new javax.swing.JComboBox<>();
        subject6 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Teacher New Account", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 1, 24))); // NOI18N

        jLabel3.setText("Password");

        phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneActionPerformed(evt);
            }
        });

        pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passActionPerformed(evt);
            }
        });

        jLabel4.setText("Confirm Password");

        jLabel12.setText("Elective");

        jLabel6.setText("Phone");

        classname1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3A", "3B", "3C", "3D", "5A", "5B", "5C", "5D", "7A", "7B", "7C" }));
        classname1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classname1ActionPerformed(evt);
            }
        });

        jLabel10.setText("Class");

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel11.setText("Subject");

        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });

        jLabel1.setText("Teacher ID");

        jLabel7.setText("Email");

        elective1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YES", "NO" }));

        jLabel2.setText("Name");

        jButton3.setText("Create");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        classname2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3A", "3B", "3C", "3D", "5A", "5B", "5C", "5D", "7A", "7B", "7C" }));
        classname2.setVisible(false);
        classname2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classname2ActionPerformed(evt);
            }
        });

        subject2.setVisible(false);

        elective2.setVisible(false);
        elective2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YES", "NO" }));

        jButton1.setText("Add Subject");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        classname3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3A", "3B", "3C", "3D", "5A", "5B", "5C", "5D", "7A", "7B", "7C" }));
        classname3.setVisible(false);
        classname3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classname3ActionPerformed(evt);
            }
        });

        subject3.setVisible(false);

        elective3.setVisible(false);
        elective3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YES", "NO" }));

        classname4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3A", "3B", "3C", "3D", "5A", "5B", "5C", "5D", "7A", "7B", "7C" }));
        classname4.setVisible(false);
        classname4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classname4ActionPerformed(evt);
            }
        });

        subject4.setVisible(false);

        elective4.setVisible(false);
        elective4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YES", "NO" }));

        classname5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3A", "3B", "3C", "3D", "5A", "5B", "5C", "5D", "7A", "7B", "7C" }));
        classname5.setVisible(false);
        classname5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classname5ActionPerformed(evt);
            }
        });

        elective5.setVisible(false);
        elective5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YES", "NO" }));

        subject5.setVisible(false);

        classname6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3A", "3B", "3C", "3D", "5A", "5B", "5C", "5D", "7A", "7B", "7C" }));
        classname6.setVisible(false);
        classname6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classname6ActionPerformed(evt);
            }
        });

        elective6.setVisible(false);
        elective6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YES", "NO" }));

        subject6.setVisible(false);

        javax.swing.GroupLayout PanelLayout = new javax.swing.GroupLayout(Panel);
        Panel.setLayout(PanelLayout);
        PanelLayout.setHorizontalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(phone)
                                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(id)
                                        .addComponent(pass)
                                        .addComponent(passcon, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addComponent(classname4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(subject4)
                        .addGap(111, 111, 111)
                        .addComponent(elective4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addComponent(classname5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(subject5)
                        .addGap(111, 111, 111)
                        .addComponent(elective5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addComponent(classname6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(subject6)
                        .addGap(111, 111, 111)
                        .addComponent(elective6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelLayout.createSequentialGroup()
                                .addComponent(classname1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(subject1)
                                .addGap(111, 111, 111))
                            .addGroup(PanelLayout.createSequentialGroup()
                                .addComponent(classname2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(150, 150, 150)
                                .addComponent(subject2, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                                .addGap(111, 111, 111))
                            .addGroup(PanelLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel11)
                                .addGap(119, 119, 119)))
                        .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(elective2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(elective1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelLayout.createSequentialGroup()
                        .addComponent(classname3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(subject3)
                        .addGap(111, 111, 111)
                        .addComponent(elective3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(PanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jButton1)
                .addGap(56, 56, 56)
                .addComponent(jButton2)
                .addGap(87, 87, 87)
                .addComponent(jButton3)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PanelLayout.setVerticalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(passcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(subject1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(classname1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(elective1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(subject2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(elective2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(classname2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classname3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subject3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(elective3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classname4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subject4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(elective4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classname5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subject5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(elective5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classname6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subject6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(elective6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(19, 19, 19))
        );

        jScrollPane1.setViewportView(Panel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                .addGap(65, 65, 65))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void classname6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classname6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classname6ActionPerformed

    private void classname5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classname5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classname5ActionPerformed

    private void classname4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classname4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classname4ActionPerformed

    private void classname3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classname3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classname3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        c++;
        switch (c) {

            case 2:
            classname2.setVisible(true);
            elective2.setVisible(true);
            subject2.setVisible(true);
            break;
            case 3:
            classname3.setVisible(true);
            elective3.setVisible(true);
            subject3.setVisible(true);
            break;
            case 4:
            classname4.setVisible(true);
            elective4.setVisible(true);
            subject4.setVisible(true);
            break;
            case 5:
            classname5.setVisible(true);
            elective5.setVisible(true);
            subject5.setVisible(true);
            break;
            case 6:
            classname6.setVisible(true);
            elective6.setVisible(true);
            subject6.setVisible(true);
            break;
            default:
            JOptionPane.showMessageDialog(null, "Sorry, We allow Maximum of 6 subjects to be added at once.");
            jButton1.setEnabled(false);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void classname2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classname2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classname2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        //yaha par
        ValidityCheck obj= new ValidityCheck();
        try{
            String sql1="SELECT * FROM teacher WHERE Teacher_id='"+id.getText()+"'";
            //psd=conn.prepareStatement(sql1);
            psd = conn.prepareStatement(sql1);
            rs = psd.executeQuery(); // execute the query, and get a java resultset

            // if this ID already exists, we quit
            if(rs.next()) {
                JOptionPane.showMessageDialog(null, "Teacher with the entered Teacher ID exists already!");
                setVisible(false);
                new TeacherAccountCreate().setVisible(true);
            }else{
                try {
                    if(obj.isValidEmail(email.getText())&&obj.isValidPhone(phone.getText())){
                       insertintodatabase(); 
                    if(flagCreateCheck==1)
                    {
                        JOptionPane.showMessageDialog(null, "Created");
                        //code here
                        setVisible(false);
                        Login ob = new Login();
                        ob.setVisible(true);
                        try {
            // TODO add your handling code here:
           conn.close();
           System.out.println("Connection Closed");
           } catch (SQLException ex) {
           Logger.getLogger(StudentDetailsDisplay.class.getName()).log(Level.SEVERE, null, ex);
           }
                    }
                }
                    else{
                        JOptionPane.showMessageDialog(null,"Invalid Email/Phone");
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
            }
            try {
            // TODO add your handling code here:
           conn.close();
           System.out.println("Connection Closed");
           } catch (SQLException ex) {
           Logger.getLogger(StudentDetailsDisplay.class.getName()).log(Level.SEVERE, null, ex);
           }
        }catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        Login ob = new Login();
        ob.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void classname1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classname1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_classname1ActionPerformed

    private void passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passActionPerformed

    private void phoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneActionPerformed
    int  c=1;    int flagCreateCheck =0;
    void insertintodatabase() throws SQLException {
        String sql;
        switch (c) {
            case 6:
                sql = "INSERT INTO teacher(Teacher_id,Teacher_name,Password,Class,Phone,Email,Subject,ElectiveFlag) values(?,?,?,?,?,?,?,?)";
                psd = conn.prepareStatement(sql);
                if ((pass.getText().equals(passcon.getText()))) {
                    //CHECK FOR EMPTY
                    if (!((id.getText().equals("")) || (name.getText().equals("")) || (pass.getText().equals("")) || (phone.getText().equals(""))
                            || (email.getText().equals("")) || (subject6.getText().equals("")))) {
                        psd.setString(1, id.getText());
                        psd.setString(2, name.getText());
                        psd.setString(3, pass.getText());
                        psd.setString(4, (String) classname6.getSelectedItem());
                        psd.setString(5, phone.getText());
                        psd.setString(6, email.getText());
                        psd.setString(7, subject6.getText());
                        psd.setString(8, (elective6.getSelectedItem().toString().equalsIgnoreCase("Yes")) ? "1" : "0");
                        psd.execute();
                    } else {
                        //field empty
                        JOptionPane.showMessageDialog(null, "ONE OR MORE OF THE FIELD(S) IS(ARE) EMPTY");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Password doesn't match");
                }
            case 5:
                sql = "INSERT INTO teacher(Teacher_id,Teacher_name,Password,Class,Phone,Email,Subject,ElectiveFlag) values(?,?,?,?,?,?,?,?)";
                psd = conn.prepareStatement(sql);
                if ((pass.getText().equals(passcon.getText()))) {
                    //CHECK FOR EMPTY
                    if (!((id.getText().equals("")) || (name.getText().equals("")) || (pass.getText().equals("")) || (phone.getText().equals(""))
                            || (email.getText().equals("")) || (subject5.getText().equals("")))) {
                        psd.setString(1, id.getText());
                        psd.setString(2, name.getText());
                        psd.setString(3, pass.getText());
                        psd.setString(4, (String) classname5.getSelectedItem());
                        psd.setString(5, phone.getText());
                        psd.setString(6, email.getText());
                        psd.setString(7, subject5.getText());
                        psd.setString(8, (elective5.getSelectedItem().toString().equalsIgnoreCase("Yes")) ? "1" : "0");
                        psd.execute();
                    } else {
                        //field empty
                        JOptionPane.showMessageDialog(null, "ONE OR MORE OF THE FIELD(S) IS(ARE) EMPTY");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Password doesn't match");
                }

            case 4:
                sql = "INSERT INTO teacher(Teacher_id,Teacher_name,Password,Class,Phone,Email,Subject,ElectiveFlag) values(?,?,?,?,?,?,?,?)";
                psd = conn.prepareStatement(sql);
                if ((pass.getText().equals(passcon.getText()))) {
                    //CHECK FOR EMPTY
                    if (!((id.getText().equals("")) || (name.getText().equals("")) || (pass.getText().equals("")) || (phone.getText().equals(""))
                            || (email.getText().equals("")) || (subject4.getText().equals("")))) {
                        psd.setString(1, id.getText());
                        psd.setString(2, name.getText());
                        psd.setString(3, pass.getText());
                        psd.setString(4, (String) classname4.getSelectedItem());
                        psd.setString(5, phone.getText());
                        psd.setString(6, email.getText());
                        psd.setString(7, subject4.getText());
                        psd.setString(8, (elective4.getSelectedItem().toString().equalsIgnoreCase("Yes")) ? "1" : "0");
                        psd.execute();
                    } else {
                        //field empty
                        JOptionPane.showMessageDialog(null, "ONE OR MORE OF THE FIELD(S) IS(ARE) EMPTY");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Password doesn't match");
                }
            case 3:
                sql = "INSERT INTO teacher(Teacher_id,Teacher_name,Password,Class,Phone,Email,Subject,ElectiveFlag) values(?,?,?,?,?,?,?,?)";
                psd = conn.prepareStatement(sql);
                if ((pass.getText().equals(passcon.getText()))) {
                    //CHECK FOR EMPTY
                    if (!((id.getText().equals("")) || (name.getText().equals("")) || (pass.getText().equals("")) || (phone.getText().equals(""))
                            || (email.getText().equals("")) || (subject3.getText().equals("")))) {
                        psd.setString(1, id.getText());
                        psd.setString(2, name.getText());
                        psd.setString(3, pass.getText());
                        psd.setString(4, (String) classname3.getSelectedItem());
                        psd.setString(5, phone.getText());
                        psd.setString(6, email.getText());
                        psd.setString(7, subject3.getText());
                        psd.setString(8, (elective3.getSelectedItem().toString().equalsIgnoreCase("Yes")) ? "1" : "0");
                        psd.execute();
                    } else {
                        //field empty
                        JOptionPane.showMessageDialog(null, "ONE OR MORE OF THE FIELD(S) IS(ARE) EMPTY");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Password doesn't match");
                }
            case 2:
                sql = "INSERT INTO teacher(Teacher_id,Teacher_name,Password,Class,Phone,Email,Subject,ElectiveFlag) values(?,?,?,?,?,?,?,?)";
                psd = conn.prepareStatement(sql);
                if ((pass.getText().equals(passcon.getText()))) {
                    //CHECK FOR EMPTY
                    if (!((id.getText().equals("")) || (name.getText().equals("")) || (pass.getText().equals("")) || (phone.getText().equals(""))
                            || (email.getText().equals("")) || (subject2.getText().equals("")))) {
                        psd.setString(1, id.getText());
                        psd.setString(2, name.getText());
                        psd.setString(3, pass.getText());
                        psd.setString(4, (String) classname2.getSelectedItem());
                        psd.setString(5, phone.getText());
                        psd.setString(6, email.getText());
                        psd.setString(7, subject2.getText());
                        psd.setString(8, (elective2.getSelectedItem().toString().equalsIgnoreCase("Yes")) ? "1" : "0");
                        psd.execute();
                    } else {
                        //field empty
                        JOptionPane.showMessageDialog(null, "ONE OR MORE OF THE FIELD(S) IS(ARE) EMPTY");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Password doesn't match");
                }
            case 1:
                sql = "INSERT INTO teacher(Teacher_id,Teacher_name,Password,Class,Phone,Email,Subject,ElectiveFlag) values(?,?,?,?,?,?,?,?)";
                psd = conn.prepareStatement(sql);
                if ((pass.getText().equals(passcon.getText()))) {
                    //CHECK FOR EMPTY
                    if (!((id.getText().equals("")) || (name.getText().equals("")) || (pass.getText().equals("")) || (phone.getText().equals(""))
                            || (email.getText().equals("")) || (subject1.getText().equals("")))) {
                        psd.setString(1, id.getText());
                        psd.setString(2, name.getText());
                        psd.setString(3, pass.getText());
                        psd.setString(4, (String) classname1.getSelectedItem());
                        psd.setString(5, phone.getText());
                        psd.setString(6, email.getText());
                        psd.setString(7, subject1.getText());
                        psd.setString(8, (elective1.getSelectedItem().toString().equalsIgnoreCase("Yes")) ? "1" : "0");
                        psd.execute();
                        flagCreateCheck =1;
                    } else {
                        //field empty
                        JOptionPane.showMessageDialog(null, "ONE OR MORE OF THE FIELD(S) IS(ARE) EMPTY");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Password doesn't match");
                }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeacherAccountCreate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeacherAccountCreate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeacherAccountCreate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeacherAccountCreate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new TeacherAccountCreate().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel;
    private javax.swing.JComboBox<String> classname1;
    private javax.swing.JComboBox<String> classname2;
    private javax.swing.JComboBox<String> classname3;
    private javax.swing.JComboBox<String> classname4;
    private javax.swing.JComboBox<String> classname5;
    private javax.swing.JComboBox<String> classname6;
    private javax.swing.JComboBox<String> elective1;
    private javax.swing.JComboBox<String> elective2;
    private javax.swing.JComboBox<String> elective3;
    private javax.swing.JComboBox<String> elective4;
    private javax.swing.JComboBox<String> elective5;
    private javax.swing.JComboBox<String> elective6;
    private javax.swing.JTextField email;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name;
    private javax.swing.JPasswordField pass;
    private javax.swing.JPasswordField passcon;
    private javax.swing.JTextField phone;
    private javax.swing.JTextField subject1;
    private javax.swing.JTextField subject2;
    private javax.swing.JTextField subject3;
    private javax.swing.JTextField subject4;
    private javax.swing.JTextField subject5;
    private javax.swing.JTextField subject6;
    // End of variables declaration//GEN-END:variables
}
